var documenterSearchIndex = {"docs":
[{"location":"apiref/#Reference","page":"API Reference","title":"Reference","text":"","category":"section"},{"location":"apiref/","page":"API Reference","title":"API Reference","text":"This lists all functions included in the RAMS.jl module:","category":"page"},{"location":"apiref/","page":"API Reference","title":"API Reference","text":"    Modules = [RAMS]","category":"page"},{"location":"apiref/#RAMS.RAMSDates-Tuple{Array{String,1}}","page":"API Reference","title":"RAMS.RAMSDates","text":"RAMSDates(flist)\n\nTakes array of file paths and returns datetimes.\n\nArguments\n\nflist::Array{String,1}: 1D array of string file paths \n\nReturns\n\ndtarr::Array{DateTime,1}: 1D array of datetimes\n\n\n\n\n\n","category":"method"},{"location":"apiref/#RAMS.RAMSVar-Tuple{Array{String,1},String}","page":"API Reference","title":"RAMS.RAMSVar","text":"RAMSVar(flist, varname)\n\nFunction to read a variable from a list of RAMS data files.\n\nArguments\n\nflist::Array{String,1}: 1D array of string file paths\nvarname::String: Name of variable\n\nReturns\n\nvar::Array: Output variable\n\n\n\n\n\n","category":"method"},{"location":"apiref/#RAMS.dropmean-Tuple{Any,Any}","page":"API Reference","title":"RAMS.dropmean","text":"dropmean(var, meandrop)\n\nFunction to drop dimensions used while taking a mean.  Specify meandrop as a tuple of dimensions (e.g. meandrop=(1,2))\n\n\n\n\n\n","category":"method"},{"location":"apiref/#RAMS.list_files-Tuple{String}","page":"API Reference","title":"RAMS.list_files","text":"list_files(dir::String)\n\nList all RAMS data files (*.h5) in dir.  Effectively, this removes the *.txt header files from the built-in readdir() results.\n\n\n\n\n\n","category":"method"},{"location":"apiref/#RAMS.vert_int_4d-Tuple{Any,Any}","page":"API Reference","title":"RAMS.vert_int_4d","text":"vert_int_4d(var, ztn; notime=false)\n\nVertically integrate var along z axis with heights specified in ztn.  Assumes that var has dimensions [t, x, y, z]\n\nSpecify notime=true to allow for vars with no t dimension (will also be  omitted from int_var)\n\nReturns:\n\nint_var::Array: Integrated array with dimensions [t,x,y]\n\n\n\n\n\n","category":"method"},{"location":"#Index","page":"Index","title":"Index","text":"","category":"section"},{"location":"","page":"Index","title":"Index","text":"Welcome to RAMS.jl","category":"page"},{"location":"#Installation","page":"Index","title":"Installation","text":"","category":"section"},{"location":"","page":"Index","title":"Index","text":"As of right now, RAMS.jl is not listed in the Julia repository. Instead, RAMS can be installed via:","category":"page"},{"location":"","page":"Index","title":"Index","text":"using Pkg\nPkg.add(url=\"git@github.com:lsterzinger/RAMS.jl.git\")","category":"page"},{"location":"#Getting-started","page":"Index","title":"Getting started","text":"","category":"section"},{"location":"#Listing-RAMS-files","page":"Index","title":"Listing RAMS files","text":"","category":"section"},{"location":"","page":"Index","title":"Index","text":"list_files(dir) lists the files in dir:","category":"page"},{"location":"","page":"Index","title":"Index","text":"using RAMS\n\nlist_files(\"./output/control/\")","category":"page"},{"location":"","page":"Index","title":"Index","text":"289-element Array{String,1}:\n \"./output/control/control-A-2017-05-12-030000-g1.h5\"\n \"./output/control/control-A-2017-05-12-030500-g1.h5\"\n \"./output/control/control-A-2017-05-12-031000-g1.h5\"\n \"./output/control/control-A-2017-05-12-031500-g1.h5\"\n \"./output/control/control-A-2017-05-12-032000-g1.h5\"\n \"./output/control/control-A-2017-05-12-032500-g1.h5\"\n \"./output/control/control-A-2017-05-12-033000-g1.h5\"\n \"./output/control/control-A-2017-05-12-033500-g1.h5\"\n \"./output/control/control-A-2017-05-12-034000-g1.h5\"\n \"./output/control/control-A-2017-05-12-034500-g1.h5\"\n ⋮\n \"./output/control/control-A-2017-05-13-021500-g1.h5\"\n \"./output/control/control-A-2017-05-13-022000-g1.h5\"\n \"./output/control/control-A-2017-05-13-022500-g1.h5\"\n \"./output/control/control-A-2017-05-13-023000-g1.h5\"\n \"./output/control/control-A-2017-05-13-023500-g1.h5\"\n \"./output/control/control-A-2017-05-13-024000-g1.h5\"\n \"./output/control/control-A-2017-05-13-024500-g1.h5\"\n \"./output/control/control-A-2017-05-13-025000-g1.h5\"\n \"./output/control/control-A-2017-05-13-025500-g1.h5\"\n \"./output/control/control-A-2017-05-13-030000-g1.h5\"\n","category":"page"},{"location":"#Converting-filenames-to-DateTime-objects","page":"Index","title":"Converting filenames to DateTime objects","text":"","category":"section"},{"location":"","page":"Index","title":"Index","text":"One of the frustrating things with RAMS output is that there is no time variable in the output. RAMSDates(flist) allows you to convert the datetimes embedded in the filename into julia DateTime objects:","category":"page"},{"location":"","page":"Index","title":"Index","text":"using RAMS\n\nflist = list_files(\"./output/control/\")\ntime = RAMSDates(flist)","category":"page"},{"location":"","page":"Index","title":"Index","text":"289-element Array{Dates.DateTime,1}:\n 2017-05-12T03:00:00\n 2017-05-12T03:05:00\n 2017-05-12T03:10:00\n 2017-05-12T03:15:00\n 2017-05-12T03:20:00\n 2017-05-12T03:25:00\n 2017-05-12T03:30:00\n 2017-05-12T03:35:00\n 2017-05-12T03:40:00\n 2017-05-12T03:45:00\n ⋮\n 2017-05-13T02:15:00\n 2017-05-13T02:20:00\n 2017-05-13T02:25:00\n 2017-05-13T02:30:00\n 2017-05-13T02:35:00\n 2017-05-13T02:40:00\n 2017-05-13T02:45:00\n 2017-05-13T02:50:00\n 2017-05-13T02:55:00\n 2017-05-13T03:00:00","category":"page"},{"location":"#Reading-in-a-variable","page":"Index","title":"Reading in a variable","text":"","category":"section"},{"location":"","page":"Index","title":"Index","text":"Reading a variable can be accomplished with RAMSVar(flist, \"varname\"). For example:","category":"page"},{"location":"","page":"Index","title":"Index","text":"using RAMS\n\nflist = list_files(\"./output/control/\")\nrcp = RAMSVar(flist, \"RCP\")","category":"page"},{"location":"#Dropping-\"empty\"-dimensions","page":"Index","title":"Dropping \"empty\" dimensions","text":"","category":"section"},{"location":"","page":"Index","title":"Index","text":"In Julia, when using Statistics.mean(dims=x) to compute a mean along a dimension, the dimension in question still exists but has size 1. This does not work with plotting packages such as Plots.jl. RAMS.jl includes dropmean(A, dims) to take a mean along a dimension.","category":"page"},{"location":"","page":"Index","title":"Index","text":"For example:","category":"page"},{"location":"","page":"Index","title":"Index","text":"# Create a random 5x5x10 array\nx = randn((5,5,10))\n\nusing Statistics\nx = mean(x, dims=(1,2))\nsize(x)","category":"page"},{"location":"","page":"Index","title":"Index","text":"vs ","category":"page"},{"location":"","page":"Index","title":"Index","text":"x = randn((5,5,10))\n\nusing RAMS\nx = dropmean(x, (1,2))\nsize(x)","category":"page"}]
}
